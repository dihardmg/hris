### =====================================================
### HRIS REST API - Comprehensive Testing Suite
### =====================================================
### For use with VS Code REST Client extension
### Install: humao.rest-client
### Usage: Click "Send Request" above each ### section
### =====================================================

# --- ENVIRONMENT VARIABLES ---
@hostname = localhost:8081
@baseUrl = http://{{hostname}}

# --- AUTHENTICATION TOKENS (Update after login) ---
@token =eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJtY3JkaWtAZ21haWwuY29tIiwiZW1wbG95ZWVJZCI6NDE0NiwiZW1wbG95ZWVDb2RlIjoiRU1QNjcxMzkiLCJ0aW1lem9uZSI6IkFzaWEvSmFrYXJ0YSIsImlhdCI6MTc1OTcyNTYxMywiZXhwIjoxNzU5ODEyMDEzfQ.ucT8cjX0pZ2uazI4h57rHxrYaVUpaLLN6eYIEJgyIhw_JZvggAWNNtR88CIH07LD
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

@supervisorToken = eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJzdXBlcnZpc29yQGhyaXMuY29tIiwiZW1wbG95ZWVJZCI6MywiZW1wbG95ZWVDb2RlIjoiU1VQMDAxIiwidGltZXpvbmUiOiJBc2lhL0pha2FydGEiLCJpYXQiOjE3NTk3MjU5ODUsImV4cCI6MTc1OTgxMjM4NX0.GTZNeYi1tRKmkcaqfztfCVbN5xL9zwMTpyHfBs7IDO9OpCNbmVfujP-WQ1ph2Zsy
# --- DYNAMIC VARIABLES (Update after creating resources) ---
@employeeId = 1
@attendanceUuid = 550e8400-e29b-41d4-a716-446655440000
@leaveRequestUuid = b350343f-ab94-4e37-8dd8-c25604942d52
@businessTravelUuid = 4d5d4101-6fbe-408e-b473-884b620d31e6
@passwordResetToken = your-reset-token-here

### =====================================================
### 1. AUTHENTICATION ENDPOINTS
### =====================================================

### @name loginEmployee
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "mcrdik@gmail.com",
  "password": "admin1234"
}

> {%
  if (response.status === 200) {
    client.global.set("token", response.body.data.token);
    client.log("‚úÖ Employee login successful!");
    client.log("Token: " + response.body.data.token);
    client.log("Employee: " + response.body.data.employee.firstName + " " + response.body.data.employee.lastName);
  } else {
    client.log("‚ùå Employee login failed: " + response.body.message);
  }
%}

### @name loginAdmin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "admin@hris.com",
  "password": "admin123"
}

> {%
  if (response.status === 200) {
    client.global.set("adminToken", response.body.data.token);
    client.log("‚úÖ Admin login successful!");
    client.log("Token: " + response.body.data.token);
  } else {
    client.log("‚ùå Admin login failed: " + response.body.message);
  }
%}

### @name loginSupervisor
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "supervisor@hris.com",
  "password": "admin123"
}

> {%
  if (response.status === 200) {
    client.global.set("supervisorToken", response.body.data.token);
    client.log("‚úÖ Supervisor login successful!");
    client.log("Token: " + response.body.data.token);
  } else {
    client.log("‚ùå Supervisor login failed: " + response.body.message);
  }
%}

### @name getCurrentUser
GET {{baseUrl}}/api/auth/me
Authorization: Bearer {{token}}

### @name loginInvalidCredentials
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "invalid@hris.com",
  "password": "wrongpassword"
}

### @name loginInvalidFormat
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "invalid-email",
  "password": ""
}

### =====================================================
### 2. PASSWORD RESET ENDPOINTS
### =====================================================

### @name requestPasswordReset
POST {{baseUrl}}/api/auth/password-reset/forgot
Content-Type: application/json

{
  "email": "mcrdik@gmail.com"
}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Password reset request sent successfully!");
    client.log("Response: " + response.body.message);
    client.log("üìß Check your email for the reset link");
    client.log("üîó Token will be valid for 1 hour");
  } else {
    client.log("‚ùå Password reset request failed: " + response.body.message);
  }
%}

### @name requestPasswordResetInvalidEmail
POST {{baseUrl}}/api/auth/password-reset/forgot
Content-Type: application/json

{
  "email": "nonexistent@example.com"
}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Email enumeration protection working - returns success for invalid email");
  } else {
    client.log("‚ùå Unexpected response for invalid email: " + response.body.message);
  }
%}

### @name requestPasswordResetInvalidFormat
POST {{baseUrl}}/api/auth/password-reset/forgot
Content-Type: application/json

{
  "email": "invalid-email-format"
}

### @name verifyResetToken
GET {{baseUrl}}/api/auth/password-reset/verify-token?token={{passwordResetToken}}

### @name resetPasswordWithValidToken
POST {{baseUrl}}/api/auth/password-reset/reset
Content-Type: application/json

{
  "token": "{{passwordResetToken}}",
  "newPassword": "NewSecurePass123!",
  "confirmPassword": "NewSecurePass123!"
}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Password reset successful!");
    client.log("Response: " + response.body.message);
  } else {
    client.log("‚ùå Password reset failed: " + response.body.message);
  }
%}

### @name resetPasswordWithWeakPassword
POST {{baseUrl}}/api/auth/password-reset/reset
Content-Type: application/json

{
  "token": "{{passwordResetToken}}",
  "newPassword": "weak",
  "confirmPassword": "weak"
}

### @name resetPasswordWithMismatch
POST {{baseUrl}}/api/auth/password-reset/reset
Content-Type: application/json

{
  "token": "{{passwordResetToken}}",
  "newPassword": "NewSecurePass123!",
  "confirmPassword": "DifferentPassword!"
}

### @name resetPasswordWithInvalidToken
POST {{baseUrl}}/api/auth/password-reset/reset
Content-Type: application/json

{
  "token": "invalid-or-expired-token",
  "newPassword": "NewSecurePass123!",
  "confirmPassword": "NewSecurePass123!"
}

### =====================================================
### 3. ATTENDANCE MANAGEMENT ENDPOINTS
### =====================================================

### @name clockIn
POST {{baseUrl}}/api/attendance/clock-in
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "latitude": -6.2088,
  "longitude": 106.8456,
  "faceImage": "base64-encoded-face-image-data",
  "notes": "Regular work day"
}

> {%
  if (response.status === 200) {
    client.global.set("attendanceUuid", response.body.data.uuid);
    client.log("‚úÖ Clock in successful!");
    client.log("Attendance UUID: " + response.body.data.uuid);
    client.log("Clock In Time: " + response.body.data.clockInTime);
  } else {
    client.log("‚ùå Clock in failed: " + response.body.message);
  }
%}

### @name clockInOutsideGeofence
POST {{baseUrl}}/api/attendance/clock-in
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "latitude": -6.3000,
  "longitude": 106.9000,
  "faceImage": "base64-encoded-face-image-data",
  "notes": "Working from client location"
}

### @name clockInTwice
POST {{baseUrl}}/api/attendance/clock-in
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "latitude": -6.2088,
  "longitude": 106.8456,
  "faceImage": "base64-encoded-face-image-data",
  "notes": "Second attempt - should fail"
}

### @name clockOut
POST {{baseUrl}}/api/attendance/clock-out
Authorization: Bearer {{token}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Clock out successful!");
    client.log("Total Hours: " + response.body.data.totalHours);
  } else {
    client.log("‚ùå Clock out failed: " + response.body.message);
  }
%}

### @name clockOutWithoutClockIn
POST {{baseUrl}}/api/attendance/clock-out
Authorization: Bearer {{token}}

### @name getTodayAttendance
GET {{baseUrl}}/api/attendance/today
Authorization: Bearer {{token}}

### @name getAttendanceStatus
GET {{baseUrl}}/api/attendance/status
Authorization: Bearer {{token}}

### @name getAttendanceHistory
GET {{baseUrl}}/api/attendance/history
Authorization: Bearer {{token}}

### @name getAttendanceHistoryPaginated
GET {{baseUrl}}/api/attendance/history?page=0&size=5
Authorization: Bearer {{token}}

### @name getAttendanceHistoryWithDateFilter
GET {{baseUrl}}/api/attendance/history?startDate=2025-01-01&endDate=2025-01-31
Authorization: Bearer {{token}}

### @name getAttendanceByUuid
GET {{baseUrl}}/api/attendance/{{attendanceUuid}}
Authorization: Bearer {{token}}

### @name getAttendanceByUuidAsSupervisor
GET {{baseUrl}}/api/attendance/{{attendanceUuid}}
Authorization: Bearer {{adminToken}}

### @name getNonExistentAttendanceByUuid
GET {{baseUrl}}/api/attendance/550e8400-e29b-41d4-a716-446655449999
Authorization: Bearer {{token}}

### =====================================================
### 4. LEAVE MANAGEMENT ENDPOINTS
### =====================================================

### @name submitAnnualLeave
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "ANNUAL",
  "startDate": "2025-12-10",
  "endDate": "2025-12-12",
  "reason": "Family vacation - attending wedding ceremony"
}

> {%
  if (response.status === 200) {
    client.global.set("leaveRequestUuid", response.body.data.uuid);
    client.log("‚úÖ Leave request submitted!");
    client.log("UUID: " + response.body.data.uuid);
    client.log("Total Days: " + response.body.data.totalDays);
    client.log("Remaining Balance: " + response.body.data.remainingBalance);
  } else {
    client.log("‚ùå Leave request submission failed: " + response.body.message);
  }
%}

### @name submitSickLeave
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "ANNUAL_LEAVE",
  "startDate": "2025-11-15",
  "endDate": "2025-11-15",
  "reason": "Medical appointment and recovery"
}

### @name submitMaternityLeave
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "MATERNITY",
  "startDate": "2025-12-01",
  "endDate": "2025-12-30",
  "reason": "Maternity leave"
}

### @name submitLeaveWithInvalidDates
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "ANNUAL",
  "startDate": "2025-12-15",
  "endDate": "2025-12-10",
  "reason": "Invalid date range"
}

### @name submitLeaveWithPastDate
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "ANNUAL",
  "startDate": "2020-01-01",
  "endDate": "2020-01-02",
  "reason": "Past date"
}

### @name getMyLeaveRequests
GET {{baseUrl}}/api/leave/my-requests
Authorization: Bearer {{token}}

### @name getMyLeaveRequestsPaginated
GET {{baseUrl}}/api/leave/my-requests?page=0&size=5
Authorization: Bearer {{token}}

### @name getMyLeaveRequestsLast7Days
GET {{baseUrl}}/api/leave/my-requests?page=0&size=10&days=7
Authorization: Bearer {{token}}

### @name getMyLeaveRequestsLast90Days
GET {{baseUrl}}/api/leave/my-requests?days=90
Authorization: Bearer {{token}}

### @name getLeaveRequestByUuid
GET {{baseUrl}}/api/leave/request/{{leaveRequestUuid}}
Authorization: Bearer {{token}}

### @name getLeaveRequestByUuidAsSupervisor
GET {{baseUrl}}/api/leave/request/{{leaveRequestUuid}}
Authorization: Bearer {{supervisorToken}}

### @name getNonExistentLeaveRequestByUuid
GET {{baseUrl}}/api/leave/request/550e8400-e29b-41d4-a716-446655449999
Authorization: Bearer {{token}}

### @name getCurrentLeave
GET {{baseUrl}}/api/leave/current
Authorization: Bearer {{token}}

### @name approveLeaveRequest
POST {{baseUrl}}/api/leave/supervisor/approve/{{leaveRequestUuid}}
Authorization: Bearer {{supervisorToken}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Leave request approved!");
    client.log("Status: " + response.body.data.status);
  } else {
    client.log("‚ùå Leave approval failed: " + response.body.message);
  }
%}

### @name rejectLeaveRequest
POST {{baseUrl}}/api/leave/supervisor/reject/{{leaveRequestUuid}}
Authorization: Bearer {{supervisorToken}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Leave request rejected!");
    client.log("Status: " + response.body.data.status);
  } else {
    client.log("‚ùå Leave rejection failed: " + response.body.message);
  }
%}

### @name approveLeaveRequestAsEmployee
POST {{baseUrl}}/api/leave/supervisor/approve/{{leaveRequestUuid}}
Authorization: Bearer {{token}}

### @name getLeaveBalance
GET {{baseUrl}}/api/leave/balance
Authorization: Bearer {{token}}

### @name getPendingLeaveRequestsForSupervisor
GET {{baseUrl}}/api/leave/supervisor/pending
Authorization: Bearer {{supervisorToken}}

### =====================================================
### 5. BUSINESS TRAVEL MANAGEMENT ENDPOINTS
### =====================================================

### =====================================================
### 5.1 BUSINESS TRAVEL CITY DROPDOWN ENDPOINTS
### =====================================================

### @name getBusinessTravelCitiesDropdown
GET {{baseUrl}}/api/business-travel/cities
Authorization: Bearer {{token}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Business travel cities dropdown retrieved successfully!");
    client.log("Total cities: " + response.body.data.length);
    if (response.body.data.length > 0) {
      client.log("Sample city: " + response.body.data[0].displayText);
      client.global.set("businessTravelCityId", response.body.data[0].id);
    }
  } else {
    client.log("‚ùå Business travel cities dropdown retrieval failed: " + response.body.message);
  }
%}

### @name searchBusinessTravelCities
GET {{baseUrl}}/api/business-travel/cities?search=Jakarta
Authorization: Bearer {{token}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Business travel city search completed!");
    client.log("Found cities: " + response.body.data.length);
    if (response.body.data.length > 0) {
      client.log("Search results: " + JSON.stringify(response.body.data));
    }
  } else {
    client.log("‚ùå Business travel city search failed: " + response.body.message);
  }
%}

### @name searchBusinessTravelCitiesByProvince
GET {{baseUrl}}/api/business-travel/cities?page=0&size=37
Authorization: Bearer {{token}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Business travel cities by province search completed!");
    client.log("Found cities in Jawa: " + response.body.data.length);
  } else {
    client.log("‚ùå Business travel cities by province search failed: " + response.body.message);
  }
%}

### @name getBusinessTravelCitiesDropdownUnauthorized
GET {{baseUrl}}/api/business-travel/cities

### @name getBusinessTravelCitiesDropdownInvalidToken
GET {{baseUrl}}/api/business-travel/cities
Authorization: Bearer invalid-token-here

### =====================================================
### 5.2 GENERAL CITY MANAGEMENT ENDPOINTS
### =====================================================

### @name getAllCitiesForDropdown
GET {{baseUrl}}/api/cities/dropdown

> {%
  if (response.status === 200) {
    client.log("‚úÖ Cities dropdown retrieved successfully!");
    client.log("Total cities: " + response.body.data.length);
    if (response.body.data.length > 0) {
      client.log("Sample city: " + response.body.data[0].displayName);
      client.global.set("cityId", response.body.data[0].id);
    }
  } else {
    client.log("‚ùå Cities dropdown retrieval failed: " + response.body.message);
  }
%}

### @name searchCities
GET {{baseUrl}}/api/cities/dropdown?search=Jakarta

> {%
  if (response.status === 200) {
    client.log("‚úÖ City search completed!");
    client.log("Found cities: " + response.body.data.length);
  } else {
    client.log("‚ùå City search failed: " + response.body.message);
  }
%}

### @name getCitiesByProvince
GET {{baseUrl}}/api/cities/dropdown?province=Jawa Barat

> {%
  if (response.status === 200) {
    client.log("‚úÖ Cities by province retrieved!");
    client.log("Cities in Jawa Barat: " + response.body.data.length);
  } else {
    client.log("‚ùå Cities by province retrieval failed: " + response.body.message);
  }
%}

### @name getAllCitiesPaginated
GET {{baseUrl}}/api/cities?page=0&size=5

> {%
  if (response.status === 200) {
    client.log("‚úÖ Paginated cities retrieved!");
    client.log("Current page: " + response.body.data.currentPage);
    client.log("Total elements: " + response.body.data.totalElements);
  } else {
    client.log("‚ùå Paginated cities retrieval failed: " + response.body.message);
  }
%}

### @name getCityById
GET {{baseUrl}}/api/cities/{{cityId}}

### =====================================================
### 5.3 BUSINESS TRAVEL REQUEST ENDPOINTS
### =====================================================

### @name submitBusinessTravelRequest
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": 1,
  "startDate": "2025-11-12",
  "endDate": "2025-11-13",
  "reason": "Client meeting and project discussion"
}

> {%
  if (response.status === 200) {
    client.global.set("businessTravelUuid", response.body.data.uuid);
    client.log("‚úÖ Business travel request submitted!");
    client.log("UUID: " + response.body.data.uuid);
    client.log("Total Days: " + response.body.data.totalDays);
    client.log("City: " + response.body.data.cityDisplayName);
  } else {
    client.log("‚ùå Business travel request submission failed: " + response.body.message);
  }
%}

### @name submitBusinessTravelShortTrip
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": 2,
  "startDate": "2025-11-20",
  "endDate": "2025-11-20",
  "reason": "One-day business meeting"
}

### @name submitBusinessTravelLongTrip
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": 3,
  "startDate": "2025-12-01",
  "endDate": "2025-12-05",
  "reason": "Conference and networking"
}

### @name submitBusinessTravelWithInvalidDates
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": 1,
  "startDate": "2025-12-15",
  "endDate": "2025-12-10",
  "reason": "Invalid date range"
}

### @name submitBusinessTravelWithInvalidCity
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": 8,
  "startDate": "2025-12-20",
  "endDate": "2025-12-22",
  "reason": "Testing invalid city"
}

### @name getMyBusinessTravelRequests
GET {{baseUrl}}/api/business-travel/my-requests
Authorization: Bearer {{token}}

### @name getMyBusinessTravelRequestsPaginated
GET {{baseUrl}}/api/business-travel/my-requests?page=0&size=5
Authorization: Bearer {{token}}

### @name getBusinessTravelRequestByUuid
GET {{baseUrl}}/api/business-travel/request/{{businessTravelUuid}}
Authorization: Bearer {{token}}

### @name getBusinessTravelRequestByUuidAsSupervisor
GET {{baseUrl}}/api/business-travel/request/{{businessTravelUuid}}
Authorization: Bearer {{supervisorToken}}

### @name getNonExistentBusinessTravelRequestByUuid
GET {{baseUrl}}/api/business-travel/request/4d5d4101-6fbe-408e-b473-884b620d31e6
Authorization: Bearer {{token}}

### @name getCurrentBusinessTravel
GET {{baseUrl}}/api/business-travel/current
Authorization: Bearer {{token}}

### @name getPendingBusinessTravelRequestsForSupervisor
GET {{baseUrl}}/api/business-travel/supervisor/pending
Authorization: Bearer {{supervisorToken}}

### @name approveBusinessTravelRequest
POST {{baseUrl}}/api/business-travel/supervisor/approve/{{businessTravelUuid}}
Authorization: Bearer {{supervisorToken}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Business travel request approved!");
    client.log("Status: " + response.body.data.status);
  } else {
    client.log("‚ùå Business travel approval failed: " + response.body.message);
  }
%}

### @name rejectBusinessTravelRequest
POST {{baseUrl}}/api/business-travel/supervisor/reject/8b4cbaa5-8561-4a38-9625-dc86cb1f6fdb
Authorization: Bearer {{supervisorToken}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Business travel request rejected!");
    client.log("Status: " + response.body.data.status);
  } else {
    client.log("‚ùå Business travel rejection failed: " + response.body.message);
  }
%}

### @name approveBusinessTravelRequestAsEmployee
POST {{baseUrl}}/api/business-travel/supervisor/approve/{{businessTravelUuid}}
Authorization: Bearer {{token}}

### =====================================================
### 6. HR ADMIN ENDPOINTS (ADMIN/HR roles only)
### =====================================================

### @name registerNewEmployee
POST {{baseUrl}}/api/admin/register-employee
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john.doe@company.com",
  "password": "TempPass123",
  "employeeId": "EMP123",
  "role": "EMPLOYEE",
  "supervisorId": 2
}

> {%
  if (response.status === 200) {
    client.global.set("employeeId", response.body.data.id);
    client.log("‚úÖ Employee registered! ID: " + response.body.data.id);
  } else {
    client.log("‚ùå Employee registration failed: " + response.body.message);
  }
%}

### @name registerSupervisor
POST {{baseUrl}}/api/admin/register-employee
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "Jane",
  "lastName": "Smith",
  "email": "jane.smith@company.com",
  "password": "TempPass123",
  "employeeId": "SUP123",
  "role": "SUPERVISOR"
}

### @name registerEmployeeWithInvalidData
POST {{baseUrl}}/api/admin/register-employee
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "",
  "lastName": "",
  "email": "invalid-email",
  "password": "123",
  "employeeId": "",
  "role": "INVALID_ROLE"
}

### @name getAllEmployees
GET {{baseUrl}}/api/admin/employees
Authorization: Bearer {{adminToken}}

### @name getAllEmployeesPaginated
GET {{baseUrl}}/api/admin/employees?page=0&size=5
Authorization: Bearer {{adminToken}}

### @name searchEmployees
GET {{baseUrl}}/api/admin/employees?search=john&role=EMPLOYEE&active=true
Authorization: Bearer {{adminToken}}

### @name getEmployeeById
GET {{baseUrl}}/api/admin/employees/{{employeeId}}
Authorization: Bearer {{adminToken}}

### @name updateEmployee
PUT {{baseUrl}}/api/admin/employees/{{employeeId}}
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "John Updated",
  "lastName": "Doe Updated",
  "email": "john.doe.updated@company.com",
  "role": "SUPERVISOR"
}

### @name updateEmployeeWithInvalidData
PUT {{baseUrl}}/api/admin/employees/{{employeeId}}
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "firstName": "",
  "email": "invalid-email",
  "role": "INVALID_ROLE"
}

### @name deactivateEmployee
POST {{baseUrl}}/api/admin/employees/{{employeeId}}/deactivate
Authorization: Bearer {{adminToken}}

### @name updateFaceTemplate
POST {{baseUrl}}/api/admin/employees/{{employeeId}}/face-template
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{adminToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="faceImage"; filename="face.jpg"
Content-Type: image/jpeg

< ./face-template.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### =====================================================
### 7. DATA MIGRATION ENDPOINTS (ADMIN role only)
### =====================================================

### @name initializeDefaultData
POST {{baseUrl}}/api/migration/initialize
Authorization: Bearer {{adminToken}}

> {%
  if (response.status === 200) {
    client.log("‚úÖ Default data initialized successfully!");
    client.log("Roles created: " + response.body.data.rolesCreated);
    client.log("Admin user created: " + response.body.data.adminUserCreated);
  } else {
    client.log("‚ùå Data initialization failed: " + response.body.message);
  }
%}

### @name importEmployeesFromCSV
POST {{baseUrl}}/api/migration/import-employees
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{adminToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="employees.csv"
Content-Type: text/csv

firstName,lastName,email,employeeId,role,supervisorId
John,Doe,john.doe@company.com,EMP004,EMPLOYEE,2
Jane,Smith,jane.smith@company.com,EMP005,EMPLOYEE,2
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### @name getCSVTemplate
GET {{baseUrl}}/api/migration/csv-template
Authorization: Bearer {{adminToken}}

### =====================================================
### 8. SYSTEM HEALTH & MONITORING ENDPOINTS
### =====================================================

### @name testEmailService
GET {{baseUrl}}/api/test/email?to=test@example.com
Authorization: Bearer {{adminToken}}

### @name getApplicationHealth
GET {{baseUrl}}/actuator/health

### @name getApplicationInfo
GET {{baseUrl}}/actuator/info

### =====================================================
### 9. DEVELOPMENT & DEBUGGING ENDPOINTS
### =====================================================

### @name generatePasswordHash
GET {{baseUrl}}/api/auth/debug/hash?password=testpassword123
Authorization: Bearer {{adminToken}}

### @name verifyPassword
POST {{baseUrl}}/api/auth/debug/verify
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "password": "testpassword123",
  "hashedPassword": "$2a$10$..."
}

### =====================================================
### 10. ERROR HANDLING & SECURITY TESTS
### =====================================================

### @name unauthorizedAccess
GET {{baseUrl}}/api/admin/employees

### @name invalidToken
GET {{baseUrl}}/api/attendance/history
Authorization: Bearer invalid-token-here

### @name expiredToken
GET {{baseUrl}}/api/attendance/history
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJleHBpcmVkIiwiaWF0IjoxNjAwMDAwMDAwLCJleHAiOjE2MDAwMDAwMDF9.invalid

### @name forbiddenAccess
GET {{baseUrl}}/api/admin/employees
Authorization: Bearer {{token}}

### @name rateLimitingTestLogin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "test@hris.com",
  "password": "wrongpassword"
}

### @name rateLimitingTestPasswordReset
POST {{baseUrl}}/api/auth/password-reset/forgot
Content-Type: application/json

{
  "email": "test@hris.com"
}

### =====================================================
### 11. AUTHORIZATION TESTS
### =====================================================

### @name employeeAccessAdminEndpoint
GET {{baseUrl}}/api/admin/employees
Authorization: Bearer {{token}}

### @name supervisorAccessAdminEndpoint
GET {{baseUrl}}/api/admin/employees
Authorization: Bearer {{supervisorToken}}

### @name employeeAccessSupervisorEndpoint
GET {{baseUrl}}/api/leave/supervisor/pending
Authorization: Bearer {{supervisorToken}}

### @name adminAccessAllEndpoints
GET {{baseUrl}}/api/leave/supervisor/pending
Authorization: Bearer {{adminToken}}

### =====================================================
### 12. VALIDATION TESTS
### =====================================================

### @name submitLeaveRequestWithEmptyFields
POST {{baseUrl}}/api/leave/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "leaveType": "",
  "startDate": "",
  "endDate": "",
  "reason": ""
}

### @name submitBusinessTravelWithEmptyFields
POST {{baseUrl}}/api/business-travel/request
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cityId": null,
  "startDate": "",
  "endDate": "",
  "reason": ""
}

### @name clockInWithInvalidCoordinates
POST {{baseUrl}}/api/attendance/clock-in
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "latitude": "invalid",
  "longitude": "invalid",
  "faceImage": "",
  "notes": ""
}

### =====================================================
### TESTING INSTRUCTIONS & WORKFLOWS
### =====================================================

# --- QUICK START ---
# 1. Start the application: mvn spring-boot:run -Dspring-boot.run.profiles=dev
# 2. Initialize data: Run "initializeDefaultData" request
# 3. Login: Run "loginAdmin", "loginSupervisor", and "loginEmployee" requests
# 4. Update tokens: Copy tokens from responses to @token, @adminToken, @supervisorToken variables
# 5. Test workflows: Follow the numbered testing sequences below

# --- WORKFLOW 1: COMPLETE EMPLOYEE DAILY WORKFLOW ---
# 1. loginEmployee ‚Üí clockIn ‚Üí getTodayAttendance ‚Üí clockOut ‚Üí getAttendanceHistory
# 2. submitAnnualLeave ‚Üí getMyLeaveRequests ‚Üí getCurrentLeave
# 3. getBusinessTravelCitiesDropdown ‚Üí submitBusinessTravelRequest ‚Üí getMyBusinessTravelRequests ‚Üí getCurrentBusinessTravel

# --- WORKFLOW 2: SUPERVISOR APPROVAL WORKFLOW ---
# 1. loginSupervisor ‚Üí getPendingLeaveRequests ‚Üí approveLeaveRequest
# 2. getPendingBusinessTravelRequests ‚Üí approveBusinessTravelRequest
# 3. Test rejection workflow with rejectLeaveRequest and rejectBusinessTravelRequest

# --- WORKFLOW 3: HR ADMIN MANAGEMENT WORKFLOW ---
# 1. loginAdmin ‚Üí registerNewEmployee ‚Üí getAllEmployees ‚Üí updateEmployee
# 2. getEmployeeById ‚Üí deactivateEmployee ‚Üí updateFaceTemplate
# 3. Test pagination and search functionality

# --- WORKFLOW 4: PASSWORD RESET WORKFLOW ---
# 1. requestPasswordReset ‚Üí checkEmail ‚Üí verifyResetToken ‚Üí resetPasswordWithValidToken
# 2. Test with new password: loginEmployee
# 3. Test security: requestPasswordResetInvalidEmail, resetPasswordWithWeakPassword

# --- WORKFLOW 5: SECURITY & ERROR HANDLING ---
# 1. Test unauthorized access: employeeAccessAdminEndpoint
# 2. Test invalid tokens: invalidToken, expiredToken
# 3. Test validation: submitLeaveRequestWithEmptyFields
# 4. Test business rules: clockInTwice, submitLeaveWithInvalidDates

# --- TESTING BEST PRACTICES ---
# 1. Always update tokens after successful login
# 2. Update UUID variables after creating resources
# 3. Test both success and failure scenarios
# 4. Verify response formats and status codes
# 5. Check console logs for debugging information
# 6. Test role-based access control thoroughly
# 7. Validate input handling and error messages
# 8. Test pagination and filtering parameters

# --- RESPONSE FORMAT EXPECTATIONS ---
# Success: {"success": true, "message": "...", "data": {...}}
# Error: {"success": false, "message": "...", "error": "ERROR_TYPE"}
# Paginated: {"success": true, "data": {"content": [...], "totalElements": N, "totalPages": N, "currentPage": N}}
# UUID-based lookup: All record retrieval uses UUID instead of numeric IDs for security

# --- SECURITY NOTES ---
# - UUIDs prevent IDOR attacks (Insecure Direct Object Reference)
# - Role-based access control enforced on all endpoints
# - Password reset includes email enumeration protection
# - Rate limiting prevents brute force attacks
# - All sensitive endpoints require proper authentication

### =====================================================
### END OF COMPREHENSIVE API TESTING SUITE
### =====================================================